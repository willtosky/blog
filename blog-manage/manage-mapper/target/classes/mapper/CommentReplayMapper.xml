<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.crybird.manage.mapper.CommentReplayMapper">
    <sql id="cols">
        id,comment_id,
        user_id,nickname,email,
        avatar,create_time,
        content,status,
        link_id,link_name,link_email,
        like
    </sql>
    <select id="getById" parameterType="java.lang.Long" resultType="cn.crybird.manage.model.CommentReplay">
        select
        <include refid="cols"></include>
        from t_comment_replay
        where id = #{id}
    </select>
    <select id="getList" resultType="cn.crybird.manage.model.CommentReplay">
        select
        <include refid="cols"/>
        from t_comment_replay
        <where>
            <if test="commentId != null">
                comment_id = #{commentId,jdbcType=BIGINT}
            </if>
        </where>
        order by create_time desc
    </select>
    <update id="updateByCommentReplay" parameterType="cn.crybird.manage.model.CommentReplay">

    </update>
    <update id="updateStatusById" parameterType="java.util.HashMap">

    </update>
    <insert id="createByCommentReplay" parameterType="cn.crybird.manage.model.CommentReplay" useGeneratedKeys="true"  keyProperty="id" keyColumn="id">
        insert into t_comment_replay(comment_id,user_id,
        nickname,avatar,
        content,link_id,
        link_name)
        values(#{commentReplay.commentId,jdbcType=BIGINT},#{commentReplay.userId,jdbcType=BIGINT},
        #{commentReplay.nickname,jdbcType=VARCHAR},#{commentReplay.avatar,jdbcType=VARCHAR},
        #{commentReplay.content,jdbcType=VARCHAR},#{commentReplay.linkId,jdbcType=BIGINT},
        #{commentReplay.linkName,jdbcType=VARCHAR})
    </insert>
    <delete id="removeById" parameterType="java.lang.Long">
        delete from t_comment_replay
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="removeByArticleId" parameterType="java.lang.Long">
        delete from t_comment_replay r
        where exists(
            select c.id
            from t_comment c
            where c.id = r.comment_id
            and c.article_id = #{articleId,jdbcType=BIGINT}
        )
    </delete>

</mapper>